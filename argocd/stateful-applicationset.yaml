apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: stateful-services
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - name: mysql
            namespace: data
            chart: mysql
            valueOverrides: |
              mysql:
                primary:
                  nodeSelector:
                    node-role: data
                  tolerations:
                    - key: "role"
                      operator: "Equal"
                      value: "data"
                      effect: "NoSchedule"
                  persistence:
                    storageClass: "gp2"
          - name: elasticsearch
            namespace: data
            chart: elasticsearch
            valueOverrides: |
              elasticsearch:
                security:
                  enabled: true
                  tls:
                    autoGenerated: true
                master:
                  nodeSelector:
                    node-role: data
                  tolerations:
                    - key: "role"
                      operator: "Equal"
                      value: "data"
                      effect: "NoSchedule"
                  persistence:
                    storageClass: "gp2"
          - name: fluentd
            namespace: logging
            chart: fluentd
            valueOverrides: |
              fluentd:
                forwarder:
                  enabled: true
                  configMap: fluentd-forwarder
                extraConfigMaps:
                  - name: fluentd-forwarder
                    data:
                      fluentd.conf: |
                        # Fluentd configuration
                        <source>
                          @type tail
                          path /var/log/containers/*.log
                          pos_file /opt/bitnami/fluentd/logs/containers.log.pos
                          tag kubernetes.*
                          read_from_head true
                          <parse>
                            @type json
                            time_format %Y-%m-%dT%H:%M:%S.%NZ
                          </parse>
                        </source>
                        
                        # Add Kubernetes metadata
                        <filter kubernetes.**>
                          @type kubernetes_metadata
                        </filter>
                        
                        # Send logs to Elasticsearch
                        <match kubernetes.**>
                          @type elasticsearch
                          host elasticsearch-master.data.svc.cluster.local
                          port 9200
                          scheme http
                          logstash_format true
                          logstash_prefix k8s-logs
                          <buffer>
                            @type file
                            path /opt/bitnami/fluentd/logs/buffers/k8s
                            flush_thread_count 2
                            flush_interval 5s
                            chunk_limit_size 2M
                            queue_limit_length 32
                            retry_max_interval 30
                            retry_forever true
                          </buffer>
                        </match>
  template:
    metadata:
      name: '{{name}}-eks-blizzard-us-east-1'
    spec:
      project: default
      source:
        repoURL: https://github.com/AmichaiHadad/eks_app_2.git
        targetRevision: main
        path: helm-chart/{{chart}}
        helm:
          values: '{{valueOverrides}}'
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{namespace}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true