apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: alertmanager-slack-webhook-es # Name for the ExternalSecret resource
  namespace: {{ .Release.Namespace }} # Use the Helm release namespace (monitoring)
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  refreshInterval: "15m"
  secretStoreRef:
    name: aws-secretsmanager # Reference the ClusterSecretStore created by Terraform
    kind: ClusterSecretStore
  target:
    # This defines the Kubernetes secret that will be created
    name: alertmanager-slack-webhook # Name of the K8s secret Alertmanager expects
    creationPolicy: Owner
  data:
  - secretKey: slack_webhook_url # Key within the K8s secret
    remoteRef:
      # Reference the secret in AWS Secrets Manager
      # Use the name defined in the external-secrets Terraform module
      key: eks-blizzard-{{ .Values.global.region }}/slack-webhook
      property: webhookUrl # Property within the JSON stored in AWS Secrets Manager 