apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: alertmanager-slack-webhook-sync # Name for the ExternalSecret resource itself
  namespace: {{ .Release.Namespace }} # Deploy in the monitoring namespace
  labels:
    # Add labels consistent with the monitoring chart if needed
    app.kubernetes.io/component: alertmanager
spec:
  refreshInterval: "1h" # How often to check for updates
  secretStoreRef:
    name: aws-secretsmanager # Reference the ClusterSecretStore created by Terraform
    kind: ClusterSecretStore
  target:
    name: alertmanager-slack-webhook # The name of the Kubernetes Secret to create/update
    creationPolicy: Owner # ESO owns the created Secret
    template:
      metadata:
        labels:
          # Add labels if needed for the K8s secret
          app.kubernetes.io/component: alertmanager
  data:
  - secretKey: slack_webhook_url # The key within the Kubernetes Secret
    remoteRef:
      # Construct the AWS Secret name using the cluster name from values
      # Assuming the pattern is eks-blizzard-<region>/slack-webhook
      key: "{{ .Values.clusterName }}/slack-webhook"
      property: webhookUrl # The key within the JSON stored in AWS Secrets Manager 