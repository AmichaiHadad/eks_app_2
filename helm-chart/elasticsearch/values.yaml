# Custom Elasticsearch chart values
# Using official Elasticsearch image directly instead of Bitnami chart

# No need for complex security configuration - using simple deployment with security disabled
# as specified in Project_Master_Definition.md and implemented in templates/elasticsearch.yaml

# Default to 3-Node cluster configuration for high availability
# Each node has both master and data roles as per Project_Master_Definition.md
# Can be overridden to 1 for simpler deployment
replicas: 3
# Discovery mode - can be set to "single-node" for simpler deployment
discovery: "multi-node"
image:
  repository: docker.elastic.co/elasticsearch/elasticsearch
  tag: 8.10.4

# Resource configuration for ES nodes
resources:
  requests:
    cpu: 500m
    memory: 3Gi
  limits:
    cpu: 1
    memory: 4Gi

# Storage configuration
storage:
  storageClassName: gp2
  size: 30Gi

# Security settings - disabled as per solution in ClaudeProgress.md
security:
  enabled: false

# Node placement
nodeSelector:
  node-role: data
tolerations:
  - effect: NoSchedule
    key: role
    value: data

# Ingress configuration
ingress:
  enabled: true
  host: elasticsearch.blizzard.co.il
  domain: blizzard.co.il  # Root domain for Route53 hosted zone lookup
  certificateArn: arn:aws:acm:us-east-1:163459217187:certificate/4ff90f30-64f8-40e1-b1b3-8f13d5fac876
  region: us-east-1  # AWS region for Route53 operations
  
  # DNS Management
  manageDns: true  # Set to true to automatically manage DNS records
  # dnsServiceAccount: route53-manager  # Optional: Service account with Route53 permissions
  
  # Optional: Node selector for the DNS job
  nodeSelector:
    node-role: management
  
  # Optional: Tolerations for the DNS job
  tolerations:
  - effect: NoSchedule
    key: management
    value: "true"
  
  # securityGroups: "sg-12345,sg-67890" # Uncomment and set valid security group IDs if needed