apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  # Name of the ExternalSecret resource itself
  name: mysql-creds-sync
  # Deploy in the same namespace as the MySQL chart (data)
  namespace: {{ .Release.Namespace }}
  labels:
    app: mysql
spec:
  refreshInterval: "1h"
  secretStoreRef:
    # Reference the ClusterSecretStore created by Terraform
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    # Name of the Kubernetes Secret to create/update in the 'data' namespace
    name: mysql-chart-credentials
    creationPolicy: Owner
    template:
      metadata:
        labels:
          app: mysql
  # Define explicit data mappings
  data:
    # Map AWS 'password' key to K8s 'mysql-password' key
    - secretKey: mysql-password
      remoteRef:
        key: eks-blizzard/mysql
        property: password # Key for app_user password in AWS Secret
    # Map AWS 'root_password' key to K8s 'mysql-root-password' key
    - secretKey: mysql-root-password
      remoteRef:
        key: eks-blizzard/mysql
        property: root_password # Key for root password in AWS Secret
    # Optionally sync other fields if needed by the chart or other consumers
    - secretKey: mysql-user # Map username if needed elsewhere
      remoteRef:
        key: eks-blizzard/mysql
        property: username
    - secretKey: mysql-database # Map database if needed elsewhere
      remoteRef:
        key: eks-blizzard/mysql
        property: database 