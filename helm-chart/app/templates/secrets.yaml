# This template creates ExternalSecret resources to sync secrets from AWS Secrets Manager
# using the External Secrets Operator.

# Create ExternalSecret for MySQL credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: app-mysql-external-secret # Renamed from app-secrets to avoid conflict if old secret existed
  namespace: {{ .Release.Namespace }} # Deploy in the application's namespace
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  refreshInterval: "1h" # How often to check for updates
  secretStoreRef:
    name: aws-secretsmanager # Reference the ClusterSecretStore created by Terraform
    kind: ClusterSecretStore
  target:
    name: mysql-secrets # The name of the Kubernetes Secret to create
    creationPolicy: Owner # ESO owns the created Secret
    template:
      metadata:
        labels:
          # Add labels if needed, e.g., for NetworkPolicy
          app: {{ include "app.name" . }}
  dataFrom:
  - extract:
      # Use printf and quote for robustness
      key: {{ printf "eks-blizzard-%s/mysql" (.Values.region | default "us-east-1") | quote }}

---
# Create ExternalSecret for Weather API Key
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: app-weather-api-external-secret
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    # Target the k8s secret name the deployment expects for the weather key
    name: app-secrets
    creationPolicy: Owner
    template:
      metadata:
        labels:
          app: {{ include "app.name" . }}
  data:
  - secretKey: weather-api-key # The key within the Kubernetes Secret
    remoteRef:
      # Construct the secret name dynamically using the region passed via values
      key: eks-blizzard-{{ .Values.region | default "us-east-1" }}/weather-api # The name of the secret in AWS Secrets Manager
      property: api_key # The key within the AWS Secret JSON